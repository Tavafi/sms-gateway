image: docker:stable

services:
  - docker:dind

stages:
  - test
  - build

variables:
  DOCKER_DRIVER: overlay2
  TEST_CI_NAMESPACE: sms-gateway

before_script:
  - docker login --username=$DOCKER_HUB_USER --password=$DOCKER_HUB_PASS

test:
  stage: test
  script:
    # gc
    - docker stop $TEST_CI_NAMESPACE $TEST_CI_NAMESPACE-mariadb || true
    - docker rm $TEST_CI_NAMESPACE $TEST_CI_NAMESPACE-mariadb || true
    - docker network rm $TEST_CI_NAMESPACE || true

    # network
    - docker network create $TEST_CI_NAMESPACE

    ################
    # Dependencies #
    ################
    # mariadb
    - |
      docker run --name $TEST_CI_NAMESPACE-mariadb --network=$TEST_CI_NAMESPACE \
        -e MYSQL_DATABASE="mariadb-d" \
        -e MYSQL_USER="mariadb-user" \
        -e MYSQL_PASSWORD="mariadb-password" \
        -e MYSQL_RANDOM_ROOT_PASSWORD="true" \
        -d mariadb:10

    # check directory
    - |
      ls -la
      ls -la $(pwd)/app
      ls -la $(pwd)/app/api
      echo $(pwd)/app

    # run ci
    - |
      docker run --name $TEST_CI_NAMESPACE --network=$TEST_CI_NAMESPACE -e ASM_PUBLIC_APP_TEST='true' -v "$PWD/app":/app node:15-buster-slim ls /app || true
      docker rm -f $TEST_CI_NAMESPACE
      docker run --name $TEST_CI_NAMESPACE --network=$TEST_CI_NAMESPACE -e ASM_PUBLIC_APP_TEST='true' -v "$PWD/app":/app node:15-buster-slim ls /app/api || true
      docker rm -f $TEST_CI_NAMESPACE
      docker run --name $TEST_CI_NAMESPACE --network=$TEST_CI_NAMESPACE -e ASM_PUBLIC_APP_TEST='true' -v "$PWD/app":/app node:15-buster-slim ls /app/api/ci.sh
      docker rm -f $TEST_CI_NAMESPACE
      docker run --name $TEST_CI_NAMESPACE --network=$TEST_CI_NAMESPACE -e ASM_PUBLIC_APP_TEST='true' -v "$PWD/app":/app node:15-buster-slim /app/api/ci.sh

    # gc
    - docker stop $TEST_CI_NAMESPACE $TEST_CI_NAMESPACE-mariadb || true
    - docker rm $TEST_CI_NAMESPACE $TEST_CI_NAMESPACE-mariadb || true
    - docker network rm $TEST_CI_NAMESPACE || true
  coverage: '/TOTAL_COVERAGE_FOR_CI_F: \d+\.\d+/'

build:
  stage: build
  script:
    # build
    - docker build -f Dockerfile -t aasaam/sms-gateway .
    # push
    - docker push aasaam/sms-gateway
    # remove image
    - docker rmi aasaam/sms-gateway
